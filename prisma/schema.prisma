// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id         Int     @id @default(autoincrement())
  address    String  @unique
  symbol     String  @default("n/a")
  name       String  @default("n/a")
  decimals   Int     @default(-1)
  malformed  Boolean @default(false)
  noContract Boolean @default(false)
  pairs0     Pair[]  @relation("Pair_Token0")
  pairs1     Pair[]  @relation("Pair_Token1")
  listed     Boolean @default(false)
}

model Pair {
  id                        Int                             @id @default(autoincrement())
  address                   String                          @unique
  token0                    Token                           @relation("Pair_Token0", fields: [t0], references: [id])
  t0                        Int
  token1                    Token                           @relation("Pair_Token1", fields: [t1], references: [id])
  t1                        Int
  liquidityInfo             PairLiquidityInfo?              @relation("Pair_Info")
  synchronized              Boolean
  liquidityInfoHistory      PairLiquidityInfoHistory[]
  liquidityInfoHistoryError PairLiquidityInfoHistoryError[]
}

model PairLiquidityInfo {
  id          Int    @id
  pair        Pair   @relation("Pair_Info", fields: [id], references: [id])
  totalSupply String
  reserve0    String
  reserve1    String
  height      Int
}

model PairLiquidityInfoHistory {
  id             Int      @id @default(autoincrement())
  pair           Pair     @relation(fields: [pairId], references: [id])
  pairId         Int
  totalSupply    String
  reserve0       String
  reserve1       String
  height         Int
  microBlockHash String
  microBlockTime BigInt
  updatedAt      DateTime @default(now()) @updatedAt

  @@unique(name: "pairIdMicroBlockHashUniqueIndex", [pairId, microBlockHash])
}

model PairLiquidityInfoHistoryError {
  id             Int      @id @default(autoincrement())
  pair           Pair     @relation(fields: [pairId], references: [id])
  pairId         Int
  microBlockHash String?
  error          String
  createdAt      DateTime @default(now())
}
